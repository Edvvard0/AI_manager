from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from app.config import settings

from app.database import SessionDep
from app.tasks.schemas import TaskCreate
from app.users.dao import UserDAO

bot = Bot(token=settings.BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


async def start_bot():
    try:
        for admin_id in settings.ADMIN_IDS:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ωü•≥.')
    except:
        pass


async def stop_bot():
    try:
        for admin_id in settings.ADMIN_IDS:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')
    except:
        pass


async def send_task_user(session: SessionDep, new_task: TaskCreate):
    # print("Send message")
    user = await UserDAO.find_one_or_none(session, **{"id": new_task.executor_id})
    tg_id = user.tg_id

    try:
        await bot.send_message(
            chat_id=tg_id,
            text=(
                f"üìå <b>–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞</b>\n\n"
                f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {new_task.title}\n"
                f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {new_task.description}\n"
                f"<b>–î–µ–¥–ª–∞–π–Ω:</b> {new_task.deadline_date}\n"
                f"<b>–°—Ç–∞—Ç—É—Å:</b> {new_task.status}"
            ),
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")


async def send_task_admin(session: SessionDep, new_task: TaskCreate):

    admin = await UserDAO.find_one_or_none(session, **{"is_admin": True})
    executor = await UserDAO.find_one_or_none(session, **{"id": new_task.executor_id})
    tg_id = admin.tg_id

    try:
        await bot.send_message(
            chat_id=tg_id,
            text=(
                f"üìå <b>–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞</b>\n\n"
                f"<b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b> {executor.name}\n"
                f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {new_task.title}\n"
                f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {new_task.description}\n"
                f"<b>–î–µ–¥–ª–∞–π–Ω:</b> {new_task.deadline_date}\n"
                f"<b>–°—Ç–∞—Ç—É—Å:</b> {new_task.status}"
            ),
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
